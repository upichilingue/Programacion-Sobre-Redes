//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// Microsoft.VSDesigner generó automáticamente este código fuente, versión=4.0.30319.42000.
// 
#pragma warning disable 1591

namespace ConsumoWebService2.soap {
    using System.Diagnostics;
    using System;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System.Web.Services;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="CountryInfoServiceSoapBinding", Namespace="http://www.oorsprong.org/websamples.countryinfo")]
    public partial class CountryInfoService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback ListOfContinentsByNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListOfContinentsByCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListOfCurrenciesByNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListOfCurrenciesByCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback CurrencyNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListOfCountryNamesByCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListOfCountryNamesByNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListOfCountryNamesGroupedByContinentOperationCompleted;
        
        private System.Threading.SendOrPostCallback CountryNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback CountryISOCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback CapitalCityOperationCompleted;
        
        private System.Threading.SendOrPostCallback CountryCurrencyOperationCompleted;
        
        private System.Threading.SendOrPostCallback CountryFlagOperationCompleted;
        
        private System.Threading.SendOrPostCallback CountryIntPhoneCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback FullCountryInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback FullCountryInfoAllCountriesOperationCompleted;
        
        private System.Threading.SendOrPostCallback CountriesUsingCurrencyOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListOfLanguagesByNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListOfLanguagesByCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback LanguageNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback LanguageISOCodeOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public CountryInfoService() {
            this.Url = global::ConsumoWebService2.Properties.Settings.Default.ConsumoWebService2_Soap2_CountryInfoService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event ListOfContinentsByNameCompletedEventHandler ListOfContinentsByNameCompleted;
        
        /// <remarks/>
        public event ListOfContinentsByCodeCompletedEventHandler ListOfContinentsByCodeCompleted;
        
        /// <remarks/>
        public event ListOfCurrenciesByNameCompletedEventHandler ListOfCurrenciesByNameCompleted;
        
        /// <remarks/>
        public event ListOfCurrenciesByCodeCompletedEventHandler ListOfCurrenciesByCodeCompleted;
        
        /// <remarks/>
        public event CurrencyNameCompletedEventHandler CurrencyNameCompleted;
        
        /// <remarks/>
        public event ListOfCountryNamesByCodeCompletedEventHandler ListOfCountryNamesByCodeCompleted;
        
        /// <remarks/>
        public event ListOfCountryNamesByNameCompletedEventHandler ListOfCountryNamesByNameCompleted;
        
        /// <remarks/>
        public event ListOfCountryNamesGroupedByContinentCompletedEventHandler ListOfCountryNamesGroupedByContinentCompleted;
        
        /// <remarks/>
        public event CountryNameCompletedEventHandler CountryNameCompleted;
        
        /// <remarks/>
        public event CountryISOCodeCompletedEventHandler CountryISOCodeCompleted;
        
        /// <remarks/>
        public event CapitalCityCompletedEventHandler CapitalCityCompleted;
        
        /// <remarks/>
        public event CountryCurrencyCompletedEventHandler CountryCurrencyCompleted;
        
        /// <remarks/>
        public event CountryFlagCompletedEventHandler CountryFlagCompleted;
        
        /// <remarks/>
        public event CountryIntPhoneCodeCompletedEventHandler CountryIntPhoneCodeCompleted;
        
        /// <remarks/>
        public event FullCountryInfoCompletedEventHandler FullCountryInfoCompleted;
        
        /// <remarks/>
        public event FullCountryInfoAllCountriesCompletedEventHandler FullCountryInfoAllCountriesCompleted;
        
        /// <remarks/>
        public event CountriesUsingCurrencyCompletedEventHandler CountriesUsingCurrencyCompleted;
        
        /// <remarks/>
        public event ListOfLanguagesByNameCompletedEventHandler ListOfLanguagesByNameCompleted;
        
        /// <remarks/>
        public event ListOfLanguagesByCodeCompletedEventHandler ListOfLanguagesByCodeCompleted;
        
        /// <remarks/>
        public event LanguageNameCompletedEventHandler LanguageNameCompleted;
        
        /// <remarks/>
        public event LanguageISOCodeCompletedEventHandler LanguageISOCodeCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.oorsprong.org/websamples.countryinfo", ResponseNamespace="http://www.oorsprong.org/websamples.countryinfo", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public tContinent[] ListOfContinentsByName() {
            object[] results = this.Invoke("ListOfContinentsByName", new object[0]);
            return ((tContinent[])(results[0]));
        }
        
        /// <remarks/>
        public void ListOfContinentsByNameAsync() {
            this.ListOfContinentsByNameAsync(null);
        }
        
        /// <remarks/>
        public void ListOfContinentsByNameAsync(object userState) {
            if ((this.ListOfContinentsByNameOperationCompleted == null)) {
                this.ListOfContinentsByNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListOfContinentsByNameOperationCompleted);
            }
            this.InvokeAsync("ListOfContinentsByName", new object[0], this.ListOfContinentsByNameOperationCompleted, userState);
        }
        
        private void OnListOfContinentsByNameOperationCompleted(object arg) {
            if ((this.ListOfContinentsByNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListOfContinentsByNameCompleted(this, new ListOfContinentsByNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.oorsprong.org/websamples.countryinfo", ResponseNamespace="http://www.oorsprong.org/websamples.countryinfo", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public tContinent[] ListOfContinentsByCode() {
            object[] results = this.Invoke("ListOfContinentsByCode", new object[0]);
            return ((tContinent[])(results[0]));
        }
        
        /// <remarks/>
        public void ListOfContinentsByCodeAsync() {
            this.ListOfContinentsByCodeAsync(null);
        }
        
        /// <remarks/>
        public void ListOfContinentsByCodeAsync(object userState) {
            if ((this.ListOfContinentsByCodeOperationCompleted == null)) {
                this.ListOfContinentsByCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListOfContinentsByCodeOperationCompleted);
            }
            this.InvokeAsync("ListOfContinentsByCode", new object[0], this.ListOfContinentsByCodeOperationCompleted, userState);
        }
        
        private void OnListOfContinentsByCodeOperationCompleted(object arg) {
            if ((this.ListOfContinentsByCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListOfContinentsByCodeCompleted(this, new ListOfContinentsByCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.oorsprong.org/websamples.countryinfo", ResponseNamespace="http://www.oorsprong.org/websamples.countryinfo", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public tCurrency[] ListOfCurrenciesByName() {
            object[] results = this.Invoke("ListOfCurrenciesByName", new object[0]);
            return ((tCurrency[])(results[0]));
        }
        
        /// <remarks/>
        public void ListOfCurrenciesByNameAsync() {
            this.ListOfCurrenciesByNameAsync(null);
        }
        
        /// <remarks/>
        public void ListOfCurrenciesByNameAsync(object userState) {
            if ((this.ListOfCurrenciesByNameOperationCompleted == null)) {
                this.ListOfCurrenciesByNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListOfCurrenciesByNameOperationCompleted);
            }
            this.InvokeAsync("ListOfCurrenciesByName", new object[0], this.ListOfCurrenciesByNameOperationCompleted, userState);
        }
        
        private void OnListOfCurrenciesByNameOperationCompleted(object arg) {
            if ((this.ListOfCurrenciesByNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListOfCurrenciesByNameCompleted(this, new ListOfCurrenciesByNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.oorsprong.org/websamples.countryinfo", ResponseNamespace="http://www.oorsprong.org/websamples.countryinfo", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public tCurrency[] ListOfCurrenciesByCode() {
            object[] results = this.Invoke("ListOfCurrenciesByCode", new object[0]);
            return ((tCurrency[])(results[0]));
        }
        
        /// <remarks/>
        public void ListOfCurrenciesByCodeAsync() {
            this.ListOfCurrenciesByCodeAsync(null);
        }
        
        /// <remarks/>
        public void ListOfCurrenciesByCodeAsync(object userState) {
            if ((this.ListOfCurrenciesByCodeOperationCompleted == null)) {
                this.ListOfCurrenciesByCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListOfCurrenciesByCodeOperationCompleted);
            }
            this.InvokeAsync("ListOfCurrenciesByCode", new object[0], this.ListOfCurrenciesByCodeOperationCompleted, userState);
        }
        
        private void OnListOfCurrenciesByCodeOperationCompleted(object arg) {
            if ((this.ListOfCurrenciesByCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListOfCurrenciesByCodeCompleted(this, new ListOfCurrenciesByCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.oorsprong.org/websamples.countryinfo", ResponseNamespace="http://www.oorsprong.org/websamples.countryinfo", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CurrencyName(string sCurrencyISOCode) {
            object[] results = this.Invoke("CurrencyName", new object[] {
                        sCurrencyISOCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CurrencyNameAsync(string sCurrencyISOCode) {
            this.CurrencyNameAsync(sCurrencyISOCode, null);
        }
        
        /// <remarks/>
        public void CurrencyNameAsync(string sCurrencyISOCode, object userState) {
            if ((this.CurrencyNameOperationCompleted == null)) {
                this.CurrencyNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCurrencyNameOperationCompleted);
            }
            this.InvokeAsync("CurrencyName", new object[] {
                        sCurrencyISOCode}, this.CurrencyNameOperationCompleted, userState);
        }
        
        private void OnCurrencyNameOperationCompleted(object arg) {
            if ((this.CurrencyNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CurrencyNameCompleted(this, new CurrencyNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.oorsprong.org/websamples.countryinfo", ResponseNamespace="http://www.oorsprong.org/websamples.countryinfo", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public tCountryCodeAndName[] ListOfCountryNamesByCode() {
            object[] results = this.Invoke("ListOfCountryNamesByCode", new object[0]);
            return ((tCountryCodeAndName[])(results[0]));
        }
        
        /// <remarks/>
        public void ListOfCountryNamesByCodeAsync() {
            this.ListOfCountryNamesByCodeAsync(null);
        }
        
        /// <remarks/>
        public void ListOfCountryNamesByCodeAsync(object userState) {
            if ((this.ListOfCountryNamesByCodeOperationCompleted == null)) {
                this.ListOfCountryNamesByCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListOfCountryNamesByCodeOperationCompleted);
            }
            this.InvokeAsync("ListOfCountryNamesByCode", new object[0], this.ListOfCountryNamesByCodeOperationCompleted, userState);
        }
        
        private void OnListOfCountryNamesByCodeOperationCompleted(object arg) {
            if ((this.ListOfCountryNamesByCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListOfCountryNamesByCodeCompleted(this, new ListOfCountryNamesByCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.oorsprong.org/websamples.countryinfo", ResponseNamespace="http://www.oorsprong.org/websamples.countryinfo", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public tCountryCodeAndName[] ListOfCountryNamesByName() {
            object[] results = this.Invoke("ListOfCountryNamesByName", new object[0]);
            return ((tCountryCodeAndName[])(results[0]));
        }
        
        /// <remarks/>
        public void ListOfCountryNamesByNameAsync() {
            this.ListOfCountryNamesByNameAsync(null);
        }
        
        /// <remarks/>
        public void ListOfCountryNamesByNameAsync(object userState) {
            if ((this.ListOfCountryNamesByNameOperationCompleted == null)) {
                this.ListOfCountryNamesByNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListOfCountryNamesByNameOperationCompleted);
            }
            this.InvokeAsync("ListOfCountryNamesByName", new object[0], this.ListOfCountryNamesByNameOperationCompleted, userState);
        }
        
        private void OnListOfCountryNamesByNameOperationCompleted(object arg) {
            if ((this.ListOfCountryNamesByNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListOfCountryNamesByNameCompleted(this, new ListOfCountryNamesByNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.oorsprong.org/websamples.countryinfo", ResponseNamespace="http://www.oorsprong.org/websamples.countryinfo", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public tCountryCodeAndNameGroupedByContinent[] ListOfCountryNamesGroupedByContinent() {
            object[] results = this.Invoke("ListOfCountryNamesGroupedByContinent", new object[0]);
            return ((tCountryCodeAndNameGroupedByContinent[])(results[0]));
        }
        
        /// <remarks/>
        public void ListOfCountryNamesGroupedByContinentAsync() {
            this.ListOfCountryNamesGroupedByContinentAsync(null);
        }
        
        /// <remarks/>
        public void ListOfCountryNamesGroupedByContinentAsync(object userState) {
            if ((this.ListOfCountryNamesGroupedByContinentOperationCompleted == null)) {
                this.ListOfCountryNamesGroupedByContinentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListOfCountryNamesGroupedByContinentOperationCompleted);
            }
            this.InvokeAsync("ListOfCountryNamesGroupedByContinent", new object[0], this.ListOfCountryNamesGroupedByContinentOperationCompleted, userState);
        }
        
        private void OnListOfCountryNamesGroupedByContinentOperationCompleted(object arg) {
            if ((this.ListOfCountryNamesGroupedByContinentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListOfCountryNamesGroupedByContinentCompleted(this, new ListOfCountryNamesGroupedByContinentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.oorsprong.org/websamples.countryinfo", ResponseNamespace="http://www.oorsprong.org/websamples.countryinfo", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CountryName(string sCountryISOCode) {
            object[] results = this.Invoke("CountryName", new object[] {
                        sCountryISOCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CountryNameAsync(string sCountryISOCode) {
            this.CountryNameAsync(sCountryISOCode, null);
        }
        
        /// <remarks/>
        public void CountryNameAsync(string sCountryISOCode, object userState) {
            if ((this.CountryNameOperationCompleted == null)) {
                this.CountryNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCountryNameOperationCompleted);
            }
            this.InvokeAsync("CountryName", new object[] {
                        sCountryISOCode}, this.CountryNameOperationCompleted, userState);
        }
        
        private void OnCountryNameOperationCompleted(object arg) {
            if ((this.CountryNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CountryNameCompleted(this, new CountryNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.oorsprong.org/websamples.countryinfo", ResponseNamespace="http://www.oorsprong.org/websamples.countryinfo", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CountryISOCode(string sCountryName) {
            object[] results = this.Invoke("CountryISOCode", new object[] {
                        sCountryName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CountryISOCodeAsync(string sCountryName) {
            this.CountryISOCodeAsync(sCountryName, null);
        }
        
        /// <remarks/>
        public void CountryISOCodeAsync(string sCountryName, object userState) {
            if ((this.CountryISOCodeOperationCompleted == null)) {
                this.CountryISOCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCountryISOCodeOperationCompleted);
            }
            this.InvokeAsync("CountryISOCode", new object[] {
                        sCountryName}, this.CountryISOCodeOperationCompleted, userState);
        }
        
        private void OnCountryISOCodeOperationCompleted(object arg) {
            if ((this.CountryISOCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CountryISOCodeCompleted(this, new CountryISOCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.oorsprong.org/websamples.countryinfo", ResponseNamespace="http://www.oorsprong.org/websamples.countryinfo", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CapitalCity(string sCountryISOCode) {
            object[] results = this.Invoke("CapitalCity", new object[] {
                        sCountryISOCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CapitalCityAsync(string sCountryISOCode) {
            this.CapitalCityAsync(sCountryISOCode, null);
        }
        
        /// <remarks/>
        public void CapitalCityAsync(string sCountryISOCode, object userState) {
            if ((this.CapitalCityOperationCompleted == null)) {
                this.CapitalCityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCapitalCityOperationCompleted);
            }
            this.InvokeAsync("CapitalCity", new object[] {
                        sCountryISOCode}, this.CapitalCityOperationCompleted, userState);
        }
        
        private void OnCapitalCityOperationCompleted(object arg) {
            if ((this.CapitalCityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CapitalCityCompleted(this, new CapitalCityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.oorsprong.org/websamples.countryinfo", ResponseNamespace="http://www.oorsprong.org/websamples.countryinfo", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public tCurrency CountryCurrency(string sCountryISOCode) {
            object[] results = this.Invoke("CountryCurrency", new object[] {
                        sCountryISOCode});
            return ((tCurrency)(results[0]));
        }
        
        /// <remarks/>
        public void CountryCurrencyAsync(string sCountryISOCode) {
            this.CountryCurrencyAsync(sCountryISOCode, null);
        }
        
        /// <remarks/>
        public void CountryCurrencyAsync(string sCountryISOCode, object userState) {
            if ((this.CountryCurrencyOperationCompleted == null)) {
                this.CountryCurrencyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCountryCurrencyOperationCompleted);
            }
            this.InvokeAsync("CountryCurrency", new object[] {
                        sCountryISOCode}, this.CountryCurrencyOperationCompleted, userState);
        }
        
        private void OnCountryCurrencyOperationCompleted(object arg) {
            if ((this.CountryCurrencyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CountryCurrencyCompleted(this, new CountryCurrencyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.oorsprong.org/websamples.countryinfo", ResponseNamespace="http://www.oorsprong.org/websamples.countryinfo", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CountryFlag(string sCountryISOCode) {
            object[] results = this.Invoke("CountryFlag", new object[] {
                        sCountryISOCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CountryFlagAsync(string sCountryISOCode) {
            this.CountryFlagAsync(sCountryISOCode, null);
        }
        
        /// <remarks/>
        public void CountryFlagAsync(string sCountryISOCode, object userState) {
            if ((this.CountryFlagOperationCompleted == null)) {
                this.CountryFlagOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCountryFlagOperationCompleted);
            }
            this.InvokeAsync("CountryFlag", new object[] {
                        sCountryISOCode}, this.CountryFlagOperationCompleted, userState);
        }
        
        private void OnCountryFlagOperationCompleted(object arg) {
            if ((this.CountryFlagCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CountryFlagCompleted(this, new CountryFlagCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.oorsprong.org/websamples.countryinfo", ResponseNamespace="http://www.oorsprong.org/websamples.countryinfo", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CountryIntPhoneCode(string sCountryISOCode) {
            object[] results = this.Invoke("CountryIntPhoneCode", new object[] {
                        sCountryISOCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CountryIntPhoneCodeAsync(string sCountryISOCode) {
            this.CountryIntPhoneCodeAsync(sCountryISOCode, null);
        }
        
        /// <remarks/>
        public void CountryIntPhoneCodeAsync(string sCountryISOCode, object userState) {
            if ((this.CountryIntPhoneCodeOperationCompleted == null)) {
                this.CountryIntPhoneCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCountryIntPhoneCodeOperationCompleted);
            }
            this.InvokeAsync("CountryIntPhoneCode", new object[] {
                        sCountryISOCode}, this.CountryIntPhoneCodeOperationCompleted, userState);
        }
        
        private void OnCountryIntPhoneCodeOperationCompleted(object arg) {
            if ((this.CountryIntPhoneCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CountryIntPhoneCodeCompleted(this, new CountryIntPhoneCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.oorsprong.org/websamples.countryinfo", ResponseNamespace="http://www.oorsprong.org/websamples.countryinfo", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public tCountryInfo FullCountryInfo(string sCountryISOCode) {
            object[] results = this.Invoke("FullCountryInfo", new object[] {
                        sCountryISOCode});
            return ((tCountryInfo)(results[0]));
        }
        
        /// <remarks/>
        public void FullCountryInfoAsync(string sCountryISOCode) {
            this.FullCountryInfoAsync(sCountryISOCode, null);
        }
        
        /// <remarks/>
        public void FullCountryInfoAsync(string sCountryISOCode, object userState) {
            if ((this.FullCountryInfoOperationCompleted == null)) {
                this.FullCountryInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFullCountryInfoOperationCompleted);
            }
            this.InvokeAsync("FullCountryInfo", new object[] {
                        sCountryISOCode}, this.FullCountryInfoOperationCompleted, userState);
        }
        
        private void OnFullCountryInfoOperationCompleted(object arg) {
            if ((this.FullCountryInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FullCountryInfoCompleted(this, new FullCountryInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.oorsprong.org/websamples.countryinfo", ResponseNamespace="http://www.oorsprong.org/websamples.countryinfo", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public tCountryInfo[] FullCountryInfoAllCountries() {
            object[] results = this.Invoke("FullCountryInfoAllCountries", new object[0]);
            return ((tCountryInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void FullCountryInfoAllCountriesAsync() {
            this.FullCountryInfoAllCountriesAsync(null);
        }
        
        /// <remarks/>
        public void FullCountryInfoAllCountriesAsync(object userState) {
            if ((this.FullCountryInfoAllCountriesOperationCompleted == null)) {
                this.FullCountryInfoAllCountriesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFullCountryInfoAllCountriesOperationCompleted);
            }
            this.InvokeAsync("FullCountryInfoAllCountries", new object[0], this.FullCountryInfoAllCountriesOperationCompleted, userState);
        }
        
        private void OnFullCountryInfoAllCountriesOperationCompleted(object arg) {
            if ((this.FullCountryInfoAllCountriesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FullCountryInfoAllCountriesCompleted(this, new FullCountryInfoAllCountriesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.oorsprong.org/websamples.countryinfo", ResponseNamespace="http://www.oorsprong.org/websamples.countryinfo", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public tCountryCodeAndName[] CountriesUsingCurrency(string sISOCurrencyCode) {
            object[] results = this.Invoke("CountriesUsingCurrency", new object[] {
                        sISOCurrencyCode});
            return ((tCountryCodeAndName[])(results[0]));
        }
        
        /// <remarks/>
        public void CountriesUsingCurrencyAsync(string sISOCurrencyCode) {
            this.CountriesUsingCurrencyAsync(sISOCurrencyCode, null);
        }
        
        /// <remarks/>
        public void CountriesUsingCurrencyAsync(string sISOCurrencyCode, object userState) {
            if ((this.CountriesUsingCurrencyOperationCompleted == null)) {
                this.CountriesUsingCurrencyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCountriesUsingCurrencyOperationCompleted);
            }
            this.InvokeAsync("CountriesUsingCurrency", new object[] {
                        sISOCurrencyCode}, this.CountriesUsingCurrencyOperationCompleted, userState);
        }
        
        private void OnCountriesUsingCurrencyOperationCompleted(object arg) {
            if ((this.CountriesUsingCurrencyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CountriesUsingCurrencyCompleted(this, new CountriesUsingCurrencyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.oorsprong.org/websamples.countryinfo", ResponseNamespace="http://www.oorsprong.org/websamples.countryinfo", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public tLanguage[] ListOfLanguagesByName() {
            object[] results = this.Invoke("ListOfLanguagesByName", new object[0]);
            return ((tLanguage[])(results[0]));
        }
        
        /// <remarks/>
        public void ListOfLanguagesByNameAsync() {
            this.ListOfLanguagesByNameAsync(null);
        }
        
        /// <remarks/>
        public void ListOfLanguagesByNameAsync(object userState) {
            if ((this.ListOfLanguagesByNameOperationCompleted == null)) {
                this.ListOfLanguagesByNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListOfLanguagesByNameOperationCompleted);
            }
            this.InvokeAsync("ListOfLanguagesByName", new object[0], this.ListOfLanguagesByNameOperationCompleted, userState);
        }
        
        private void OnListOfLanguagesByNameOperationCompleted(object arg) {
            if ((this.ListOfLanguagesByNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListOfLanguagesByNameCompleted(this, new ListOfLanguagesByNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.oorsprong.org/websamples.countryinfo", ResponseNamespace="http://www.oorsprong.org/websamples.countryinfo", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public tLanguage[] ListOfLanguagesByCode() {
            object[] results = this.Invoke("ListOfLanguagesByCode", new object[0]);
            return ((tLanguage[])(results[0]));
        }
        
        /// <remarks/>
        public void ListOfLanguagesByCodeAsync() {
            this.ListOfLanguagesByCodeAsync(null);
        }
        
        /// <remarks/>
        public void ListOfLanguagesByCodeAsync(object userState) {
            if ((this.ListOfLanguagesByCodeOperationCompleted == null)) {
                this.ListOfLanguagesByCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListOfLanguagesByCodeOperationCompleted);
            }
            this.InvokeAsync("ListOfLanguagesByCode", new object[0], this.ListOfLanguagesByCodeOperationCompleted, userState);
        }
        
        private void OnListOfLanguagesByCodeOperationCompleted(object arg) {
            if ((this.ListOfLanguagesByCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListOfLanguagesByCodeCompleted(this, new ListOfLanguagesByCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.oorsprong.org/websamples.countryinfo", ResponseNamespace="http://www.oorsprong.org/websamples.countryinfo", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LanguageName(string sISOCode) {
            object[] results = this.Invoke("LanguageName", new object[] {
                        sISOCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LanguageNameAsync(string sISOCode) {
            this.LanguageNameAsync(sISOCode, null);
        }
        
        /// <remarks/>
        public void LanguageNameAsync(string sISOCode, object userState) {
            if ((this.LanguageNameOperationCompleted == null)) {
                this.LanguageNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLanguageNameOperationCompleted);
            }
            this.InvokeAsync("LanguageName", new object[] {
                        sISOCode}, this.LanguageNameOperationCompleted, userState);
        }
        
        private void OnLanguageNameOperationCompleted(object arg) {
            if ((this.LanguageNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LanguageNameCompleted(this, new LanguageNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.oorsprong.org/websamples.countryinfo", ResponseNamespace="http://www.oorsprong.org/websamples.countryinfo", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LanguageISOCode(string sLanguageName) {
            object[] results = this.Invoke("LanguageISOCode", new object[] {
                        sLanguageName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LanguageISOCodeAsync(string sLanguageName) {
            this.LanguageISOCodeAsync(sLanguageName, null);
        }
        
        /// <remarks/>
        public void LanguageISOCodeAsync(string sLanguageName, object userState) {
            if ((this.LanguageISOCodeOperationCompleted == null)) {
                this.LanguageISOCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLanguageISOCodeOperationCompleted);
            }
            this.InvokeAsync("LanguageISOCode", new object[] {
                        sLanguageName}, this.LanguageISOCodeOperationCompleted, userState);
        }
        
        private void OnLanguageISOCodeOperationCompleted(object arg) {
            if ((this.LanguageISOCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LanguageISOCodeCompleted(this, new LanguageISOCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.oorsprong.org/websamples.countryinfo")]
    public partial class tContinent {
        
        private string sCodeField;
        
        private string sNameField;
        
        /// <remarks/>
        public string sCode {
            get {
                return this.sCodeField;
            }
            set {
                this.sCodeField = value;
            }
        }
        
        /// <remarks/>
        public string sName {
            get {
                return this.sNameField;
            }
            set {
                this.sNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.oorsprong.org/websamples.countryinfo")]
    public partial class tLanguage {
        
        private string sISOCodeField;
        
        private string sNameField;
        
        /// <remarks/>
        public string sISOCode {
            get {
                return this.sISOCodeField;
            }
            set {
                this.sISOCodeField = value;
            }
        }
        
        /// <remarks/>
        public string sName {
            get {
                return this.sNameField;
            }
            set {
                this.sNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.oorsprong.org/websamples.countryinfo")]
    public partial class tCountryInfo {
        
        private string sISOCodeField;
        
        private string sNameField;
        
        private string sCapitalCityField;
        
        private string sPhoneCodeField;
        
        private string sContinentCodeField;
        
        private string sCurrencyISOCodeField;
        
        private string sCountryFlagField;
        
        private tLanguage[] languagesField;
        
        /// <remarks/>
        public string sISOCode {
            get {
                return this.sISOCodeField;
            }
            set {
                this.sISOCodeField = value;
            }
        }
        
        /// <remarks/>
        public string sName {
            get {
                return this.sNameField;
            }
            set {
                this.sNameField = value;
            }
        }
        
        /// <remarks/>
        public string sCapitalCity {
            get {
                return this.sCapitalCityField;
            }
            set {
                this.sCapitalCityField = value;
            }
        }
        
        /// <remarks/>
        public string sPhoneCode {
            get {
                return this.sPhoneCodeField;
            }
            set {
                this.sPhoneCodeField = value;
            }
        }
        
        /// <remarks/>
        public string sContinentCode {
            get {
                return this.sContinentCodeField;
            }
            set {
                this.sContinentCodeField = value;
            }
        }
        
        /// <remarks/>
        public string sCurrencyISOCode {
            get {
                return this.sCurrencyISOCodeField;
            }
            set {
                this.sCurrencyISOCodeField = value;
            }
        }
        
        /// <remarks/>
        public string sCountryFlag {
            get {
                return this.sCountryFlagField;
            }
            set {
                this.sCountryFlagField = value;
            }
        }
        
        /// <remarks/>
        public tLanguage[] Languages {
            get {
                return this.languagesField;
            }
            set {
                this.languagesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.oorsprong.org/websamples.countryinfo")]
    public partial class tCountryCodeAndNameGroupedByContinent {
        
        private tContinent continentField;
        
        private tCountryCodeAndName[] countryCodeAndNamesField;
        
        /// <remarks/>
        public tContinent Continent {
            get {
                return this.continentField;
            }
            set {
                this.continentField = value;
            }
        }
        
        /// <remarks/>
        public tCountryCodeAndName[] CountryCodeAndNames {
            get {
                return this.countryCodeAndNamesField;
            }
            set {
                this.countryCodeAndNamesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.oorsprong.org/websamples.countryinfo")]
    public partial class tCountryCodeAndName {
        
        private string sISOCodeField;
        
        private string sNameField;
        
        /// <remarks/>
        public string sISOCode {
            get {
                return this.sISOCodeField;
            }
            set {
                this.sISOCodeField = value;
            }
        }
        
        /// <remarks/>
        public string sName {
            get {
                return this.sNameField;
            }
            set {
                this.sNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.oorsprong.org/websamples.countryinfo")]
    public partial class tCurrency {
        
        private string sISOCodeField;
        
        private string sNameField;
        
        /// <remarks/>
        public string sISOCode {
            get {
                return this.sISOCodeField;
            }
            set {
                this.sISOCodeField = value;
            }
        }
        
        /// <remarks/>
        public string sName {
            get {
                return this.sNameField;
            }
            set {
                this.sNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void ListOfContinentsByNameCompletedEventHandler(object sender, ListOfContinentsByNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListOfContinentsByNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListOfContinentsByNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public tContinent[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((tContinent[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void ListOfContinentsByCodeCompletedEventHandler(object sender, ListOfContinentsByCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListOfContinentsByCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListOfContinentsByCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public tContinent[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((tContinent[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void ListOfCurrenciesByNameCompletedEventHandler(object sender, ListOfCurrenciesByNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListOfCurrenciesByNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListOfCurrenciesByNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public tCurrency[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((tCurrency[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void ListOfCurrenciesByCodeCompletedEventHandler(object sender, ListOfCurrenciesByCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListOfCurrenciesByCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListOfCurrenciesByCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public tCurrency[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((tCurrency[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void CurrencyNameCompletedEventHandler(object sender, CurrencyNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CurrencyNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CurrencyNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void ListOfCountryNamesByCodeCompletedEventHandler(object sender, ListOfCountryNamesByCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListOfCountryNamesByCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListOfCountryNamesByCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public tCountryCodeAndName[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((tCountryCodeAndName[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void ListOfCountryNamesByNameCompletedEventHandler(object sender, ListOfCountryNamesByNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListOfCountryNamesByNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListOfCountryNamesByNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public tCountryCodeAndName[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((tCountryCodeAndName[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void ListOfCountryNamesGroupedByContinentCompletedEventHandler(object sender, ListOfCountryNamesGroupedByContinentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListOfCountryNamesGroupedByContinentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListOfCountryNamesGroupedByContinentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public tCountryCodeAndNameGroupedByContinent[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((tCountryCodeAndNameGroupedByContinent[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void CountryNameCompletedEventHandler(object sender, CountryNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CountryNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CountryNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void CountryISOCodeCompletedEventHandler(object sender, CountryISOCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CountryISOCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CountryISOCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void CapitalCityCompletedEventHandler(object sender, CapitalCityCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CapitalCityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CapitalCityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void CountryCurrencyCompletedEventHandler(object sender, CountryCurrencyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CountryCurrencyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CountryCurrencyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public tCurrency Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((tCurrency)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void CountryFlagCompletedEventHandler(object sender, CountryFlagCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CountryFlagCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CountryFlagCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void CountryIntPhoneCodeCompletedEventHandler(object sender, CountryIntPhoneCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CountryIntPhoneCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CountryIntPhoneCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void FullCountryInfoCompletedEventHandler(object sender, FullCountryInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FullCountryInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FullCountryInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public tCountryInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((tCountryInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void FullCountryInfoAllCountriesCompletedEventHandler(object sender, FullCountryInfoAllCountriesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FullCountryInfoAllCountriesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FullCountryInfoAllCountriesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public tCountryInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((tCountryInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void CountriesUsingCurrencyCompletedEventHandler(object sender, CountriesUsingCurrencyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CountriesUsingCurrencyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CountriesUsingCurrencyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public tCountryCodeAndName[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((tCountryCodeAndName[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void ListOfLanguagesByNameCompletedEventHandler(object sender, ListOfLanguagesByNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListOfLanguagesByNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListOfLanguagesByNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public tLanguage[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((tLanguage[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void ListOfLanguagesByCodeCompletedEventHandler(object sender, ListOfLanguagesByCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListOfLanguagesByCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListOfLanguagesByCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public tLanguage[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((tLanguage[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void LanguageNameCompletedEventHandler(object sender, LanguageNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LanguageNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LanguageNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void LanguageISOCodeCompletedEventHandler(object sender, LanguageISOCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LanguageISOCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LanguageISOCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591